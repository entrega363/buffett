const { createClient } = require('@supabase/supabase-js');

// Credenciais do Supabase com Service Role Key (permite todas as opera√ß√µes)
const SUPABASE_URL = 'https://vopekxfyorbuyrvzcshy.supabase.co';
// Service Role Key (permite todas as opera√ß√µes administrativas)
const SUPABASE_SERVICE_ROLE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZvcGVreGZ5b3JidXlydnpjc2h5Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NzQ1OTI2MywiZXhwIjoyMDczMDM1MjYzfQ.CEziwcAFfb7reGiGorqLneb-81OHDSHwR1ew5Ibg0yk';

console.log('=== CONEX√ÉO ADMINISTRATIVA AO SUPABASE ===\n');

// Criar cliente Supabase com permiss√µes administrativas
const supabaseAdmin = createClient(SUPABASE_URL, SUPABASE_SERVICE_ROLE_KEY, {
    auth: {
        autoRefreshToken: false,
        persistSession: false
    }
});

// Dados reais para o Buffet Sobral
const realData = {
    services: [
        {
            name: "Buffet Completo",
            description: "Salgados variados, doces sortidos, bebidas n√£o alco√≥licas e servi√ßo completo de gar√ßons",
            price: 45.00,
            image_url: "",
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString()
        },
        {
            name: "Bolo Personalizado",
            description: "Bolos tem√°ticos e personalizados para anivers√°rios, formaturas e casamentos",
            price: 120.00,
            image_url: "",
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString()
        },
        {
            name: "Decora√ß√£o Tem√°tica",
            description: "Decora√ß√£o completa com bal√µes, pain√©is, mesas e centros de mesa personalizados",
            price: 200.00,
            image_url: "",
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString()
        },
        {
            name: "Coffee Break Corporativo",
            description: "Caf√© premium, salgados variados, doces finos e sucos naturais para reuni√µes empresariais",
            price: 25.00,
            image_url: "",
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString()
        },
        {
            name: "Jantar Executivo",
            description: "Menu sofisticado com entradas, prato principal, sobremesa e bebidas para eventos formais",
            price: 85.00,
            image_url: "",
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString()
        },
        {
            name: "Coquetel de Confraterniza√ß√£o",
            description: "Finger foods gourmet, canap√©s, bebidas variadas para confraterniza√ß√µes e happy hours",
            price: 35.00,
            image_url: "",
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString()
        },
        {
            name: "Lanche para Eventos",
            description: "Sandu√≠ches naturais, salgados tradicionais, refrigerantes e sucos para eventos casuais",
            price: 18.00,
            image_url: "",
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString()
        },
        {
            name: "Churrasco Completo",
            description: "Carnes nobres grelhadas, acompanhamentos variados, saladas frescas e p√£es artesanais",
            price: 55.00,
            image_url: "",
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString()
        }
    ],
    
    reviews: [
        {
            name: "Maria Silva",
            stars: 5,
            comment: "Excelente atendimento e comida deliciosa! Recomendo muito.",
            created_at: new Date().toISOString()
        },
        {
            name: "Jo√£o Oliveira",
            stars: 4,
            comment: "√ìtimo buffet, equipe atenciosa. √önica coisa que poderia melhorar √© a variedade de doces.",
            created_at: new Date().toISOString()
        },
        {
            name: "Ana Costa",
            stars: 5,
            comment: "Festa perfeita para minha filha. Os organizadores superaram as expectativas!",
            created_at: new Date().toISOString()
        },
        {
            name: "Carlos Souza",
            stars: 4,
            comment: "Muito bom, ambiente agrad√°vel e card√°pio variado. Voltaremos com certeza.",
            created_at: new Date().toISOString()
        }
    ],
    
    space_photos: [
        {
            name: "Sal√£o Principal",
            data: "",
            upload_date: new Date().toISOString()
        },
        {
            name: "√Årea Externa",
            data: "",
            upload_date: new Date().toISOString()
        },
        {
            name: "Cozinha Industrial",
            data: "",
            upload_date: new Date().toISOString()
        },
        {
            name: "√Årea Kids",
            data: "",
            upload_date: new Date().toISOString()
        },
        {
            name: "Churrasqueira",
            data: "",
            upload_date: new Date().toISOString()
        },
        {
            name: "Estacionamento",
            data: "",
            upload_date: new Date().toISOString()
        }
    ],
    
    contact_info: {
        whatsapp_number: "(85) 99999-9999",
        contact_email: "contato@buffetsobral.com",
        contact_phone: "(85) 99999-9999",
        last_updated: new Date().toISOString()
    },
    
    featured_videos: [
        {
            url: "https://www.youtube.com/watch?v=example1",
            video_id: "example1",
            title: "Tour pelo Buffet Sobral",
            added_date: new Date().toISOString()
        },
        {
            url: "https://www.youtube.com/watch?v=example2",
            video_id: "example2",
            title: "Festa de Anivers√°rio Infantil",
            added_date: new Date().toISOString()
        },
        {
            url: "https://www.youtube.com/watch?v=example3",
            video_id: "example3",
            title: "Casamento Realizado no Local",
            added_date: new Date().toISOString()
        }
    ]
};

async function populateAllTables() {
    console.log('üöÄ INICIANDO POPULA√á√ÉO COMPLETA COM PERMISS√ïES ADMINISTRATIVAS...\n');
    
    try {
        // 1. Popular tabela de servi√ßos
        console.log('üçΩÔ∏è  POPULANDO SERVI√áOS...\n');
        
        // Limpar tabela existente
        console.log('üßπ Limpando tabela de servi√ßos...');
        await supabaseAdmin.from('services').delete().neq('id', '00000000-0000-0000-0000-000000000000');
        
        // Inserir novos servi√ßos
        console.log('‚ûï Inserindo servi√ßos...');
        const { data: servicesData, error: servicesError } = await supabaseAdmin
            .from('services')
            .insert(realData.services);
        
        if (servicesError) {
            console.log(`‚ùå Erro ao inserir servi√ßos: ${servicesError.message}\n`);
        } else {
            console.log(`‚úÖ ${realData.services.length} servi√ßos inseridos com sucesso!\n`);
        }
        
        // 2. Popular tabela de avalia√ß√µes
        console.log('‚≠ê POPULANDO AVALIA√á√ïES...\n');
        
        // Limpar tabela existente
        console.log('üßπ Limpando tabela de avalia√ß√µes...');
        await supabaseAdmin.from('reviews').delete().neq('id', '00000000-0000-0000-0000-000000000000');
        
        // Inserir novas avalia√ß√µes
        console.log('‚ûï Inserindo avalia√ß√µes...');
        const { data: reviewsData, error: reviewsError } = await supabaseAdmin
            .from('reviews')
            .insert(realData.reviews);
        
        if (reviewsError) {
            console.log(`‚ùå Erro ao inserir avalia√ß√µes: ${reviewsError.message}\n`);
        } else {
            console.log(`‚úÖ ${realData.reviews.length} avalia√ß√µes inseridas com sucesso!\n`);
        }
        
        // 3. Popular tabela de fotos do espa√ßo
        console.log('üì∏ POPULANDO FOTOS DO ESPA√áO...\n');
        
        // Limpar tabela existente
        console.log('üßπ Limpando tabela de fotos...');
        await supabaseAdmin.from('space_photos').delete().neq('id', '00000000-0000-0000-0000-000000000000');
        
        // Inserir novas fotos
        console.log('‚ûï Inserindo fotos...');
        const { data: photosData, error: photosError } = await supabaseAdmin
            .from('space_photos')
            .insert(realData.space_photos);
        
        if (photosError) {
            console.log(`‚ùå Erro ao inserir fotos: ${photosError.message}\n`);
        } else {
            console.log(`‚úÖ ${realData.space_photos.length} fotos inseridas com sucesso!\n`);
        }
        
        // 4. Popular tabela de informa√ß√µes de contato
        console.log('üìû POPULANDO INFORMA√á√ïES DE CONTATO...\n');
        
        // Limpar tabela existente
        console.log('üßπ Limpando tabela de contatos...');
        await supabaseAdmin.from('contact_info').delete().neq('id', '00000000-0000-0000-0000-000000000000');
        
        // Inserir informa√ß√µes de contato
        console.log('‚ûï Inserindo informa√ß√µes de contato...');
        const { data: contactData, error: contactError } = await supabaseAdmin
            .from('contact_info')
            .insert([realData.contact_info]);
        
        if (contactError) {
            console.log(`‚ùå Erro ao inserir informa√ß√µes de contato: ${contactError.message}\n`);
        } else {
            console.log(`‚úÖ Informa√ß√µes de contato inseridas com sucesso!\n`);
        }
        
        // 5. Popular tabela de v√≠deos em destaque
        console.log('üé¨ POPULANDO V√çDEOS EM DESTAQUE...\n');
        
        // Limpar tabela existente
        console.log('üßπ Limpando tabela de v√≠deos...');
        await supabaseAdmin.from('featured_videos').delete().neq('id', '00000000-0000-0000-0000-000000000000');
        
        // Inserir novos v√≠deos
        console.log('‚ûï Inserindo v√≠deos...');
        const { data: videosData, error: videosError } = await supabaseAdmin
            .from('featured_videos')
            .insert(realData.featured_videos);
        
        if (videosError) {
            console.log(`‚ùå Erro ao inserir v√≠deos: ${videosError.message}\n`);
        } else {
            console.log(`‚úÖ ${realData.featured_videos.length} v√≠deos inseridos com sucesso!\n`);
        }
        
        console.log('‚úÖ POPULA√á√ÉO COMPLETA REALIZADA COM SUCESSO!\n');
        
        // Verificar popula√ß√£o
        await verifyPopulation();
        
    } catch (error) {
        console.log(`‚ùå Erro durante a popula√ß√£o: ${error.message}\n`);
    }
}

async function verifyPopulation() {
    console.log('üîç VERIFICANDO POPULA√á√ÉO DAS TABELAS...\n');
    
    const verificationQueries = [
        { 
            name: 'Servi√ßos', 
            query: () => supabaseAdmin.from('services').select('*', { count: 'exact' }),
            expected: realData.services.length
        },
        { 
            name: 'Avalia√ß√µes', 
            query: () => supabaseAdmin.from('reviews').select('*', { count: 'exact' }),
            expected: realData.reviews.length
        },
        { 
            name: 'Fotos do Espa√ßo', 
            query: () => supabaseAdmin.from('space_photos').select('*', { count: 'exact' }),
            expected: realData.space_photos.length
        },
        { 
            name: 'Informa√ß√µes de Contato', 
            query: () => supabaseAdmin.from('contact_info').select('*', { count: 'exact' }),
            expected: 1
        },
        { 
            name: 'V√≠deos em Destaque', 
            query: () => supabaseAdmin.from('featured_videos').select('*', { count: 'exact' }),
            expected: realData.featured_videos.length
        }
    ];
    
    let allVerified = true;
    
    for (const verification of verificationQueries) {
        console.log(`üìä Verificando: ${verification.name}`);
        
        try {
            const { data, error, count } = await verification.query();
            
            if (error) {
                console.log(`   ‚ùå Erro na verifica√ß√£o: ${error.message}`);
                allVerified = false;
            } else {
                console.log(`   ‚úÖ ${count} registros encontrados (${verification.expected} esperados)`);
                if (count !== verification.expected) {
                    console.log(`   ‚ö†Ô∏è  Diferen√ßa na contagem!`);
                }
            }
        } catch (error) {
            console.log(`   ‚ùå Erro: ${error.message}`);
            allVerified = false;
        }
        
        console.log('');
    }
    
    if (allVerified) {
        console.log('üéâ TODAS AS TABELAS VERIFICADAS COM SUCESSO!\n');
        console.log('üìä RESUMO FINAL:');
        console.log(`   üçΩÔ∏è  Servi√ßos: ${realData.services.length} itens`);
        console.log(`   ‚≠ê Avalia√ß√µes: ${realData.reviews.length} registros`);
        console.log(`   üì∏ Fotos: ${realData.space_photos.length} imagens`);
        console.log(`   üìû Contatos: 1 registro`);
        console.log(`   üé¨ V√≠deos: ${realData.featured_videos.length} itens`);
        console.log('\n‚úÖ O banco de dados est√° completamente populado e pronto para uso!');
    } else {
        console.log('‚ùå Algumas tabelas apresentaram problemas na verifica√ß√£o.');
    }
    
    console.log('\n' + '='.repeat(50));
    console.log('üí° INSTRU√á√ïES PARA O SITE:');
    console.log('='.repeat(50));
    console.log('1. O site agora deve carregar todos os dados corretamente');
    console.log('2. As credenciais an√¥nimas permitem leitura dos dados');
    console.log('3. Apenas opera√ß√µes administrativas requerem a Service Role Key');
    console.log('4. Para atualiza√ß√µes futuras, use o painel do Supabase');
}

// Executar popula√ß√£o completa
populateAllTables();