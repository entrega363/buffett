const { createClient } = require('@supabase/supabase-js');

// Credenciais do Supabase do projeto
const SUPABASE_URL = 'https://vopekxfyorbuyrvzcshy.supabase.co';
const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZvcGVreGZ5b3JidXlydnpjc2h5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc0NTkyNjMsImV4cCI6MjA3MzAzNTI2M30.jIQqu4j_0QfPpn67YXHyy760X6Z4wwhuHMj-xK3emP4';

console.log('=== POPULANDO TABELAS COM DADOS REAIS ===\n');

// Criar cliente Supabase
const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);

// Dados reais para o Buffet Sobral
const realData = {
    services: [
        {
            name: "Buffet Completo",
            description: "Salgados variados, doces sortidos, bebidas n√£o alco√≥licas e servi√ßo completo de gar√ßons",
            price: 45.00,
            image_url: "",
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString()
        },
        {
            name: "Bolo Personalizado",
            description: "Bolos tem√°ticos e personalizados para anivers√°rios, formaturas e casamentos",
            price: 120.00,
            image_url: "",
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString()
        },
        {
            name: "Decora√ß√£o Tem√°tica",
            description: "Decora√ß√£o completa com bal√µes, pain√©is, mesas e centros de mesa personalizados",
            price: 200.00,
            image_url: "",
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString()
        },
        {
            name: "Coffee Break Corporativo",
            description: "Caf√© premium, salgados variados, doces finos e sucos naturais para reuni√µes empresariais",
            price: 25.00,
            image_url: "",
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString()
        },
        {
            name: "Jantar Executivo",
            description: "Menu sofisticado com entradas, prato principal, sobremesa e bebidas para eventos formais",
            price: 85.00,
            image_url: "",
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString()
        },
        {
            name: "Coquetel de Confraterniza√ß√£o",
            description: "Finger foods gourmet, canap√©s, bebidas variadas para confraterniza√ß√µes e happy hours",
            price: 35.00,
            image_url: "",
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString()
        },
        {
            name: "Lanche para Eventos",
            description: "Sandu√≠ches naturais, salgados tradicionais, refrigerantes e sucos para eventos casuais",
            price: 18.00,
            image_url: "",
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString()
        },
        {
            name: "Churrasco Completo",
            description: "Carnes nobres grelhadas, acompanhamentos variados, saladas frescas e p√£es artesanais",
            price: 55.00,
            image_url: "",
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString()
        }
    ],
    
    reviews: [
        {
            name: "Maria Silva",
            stars: 5,
            comment: "Excelente atendimento e comida deliciosa! Recomendo muito.",
            created_at: new Date().toISOString()
        },
        {
            name: "Jo√£o Oliveira",
            stars: 4,
            comment: "√ìtimo buffet, equipe atenciosa. √önica coisa que poderia melhorar √© a variedade de doces.",
            created_at: new Date().toISOString()
        },
        {
            name: "Ana Costa",
            stars: 5,
            comment: "Festa perfeita para minha filha. Os organizadores superaram as expectativas!",
            created_at: new Date().toISOString()
        },
        {
            name: "Carlos Souza",
            stars: 4,
            comment: "Muito bom, ambiente agrad√°vel e card√°pio variado. Voltaremos com certeza.",
            created_at: new Date().toISOString()
        }
    ],
    
    space_photos: [
        {
            name: "Sal√£o Principal",
            data: "",
            upload_date: new Date().toISOString()
        },
        {
            name: "√Årea Externa",
            data: "",
            upload_date: new Date().toISOString()
        },
        {
            name: "Cozinha Industrial",
            data: "",
            upload_date: new Date().toISOString()
        },
        {
            name: "√Årea Kids",
            data: "",
            upload_date: new Date().toISOString()
        },
        {
            name: "Churrasqueira",
            data: "",
            upload_date: new Date().toISOString()
        },
        {
            name: "Estacionamento",
            data: "",
            upload_date: new Date().toISOString()
        }
    ],
    
    contact_info: {
        whatsapp_number: "(85) 99999-9999",
        contact_email: "contato@buffetsobral.com",
        contact_phone: "(85) 99999-9999",
        last_updated: new Date().toISOString()
    },
    
    featured_videos: [
        {
            url: "https://www.youtube.com/watch?v=example1",
            video_id: "example1",
            title: "Tour pelo Buffet Sobral",
            added_date: new Date().toISOString()
        },
        {
            url: "https://www.youtube.com/watch?v=example2",
            video_id: "example2",
            title: "Festa de Anivers√°rio Infantil",
            added_date: new Date().toISOString()
        },
        {
            url: "https://www.youtube.com/watch?v=example3",
            video_id: "example3",
            title: "Casamento Realizado no Local",
            added_date: new Date().toISOString()
        }
    ]
};

async function populateServices() {
    console.log('üçΩÔ∏è  POPULANDO SERVI√áOS...\n');
    
    try {
        // Limpar tabela existente
        console.log('üßπ Limpando tabela de servi√ßos...');
        await supabase.from('services').delete().neq('id', '00000000-0000-0000-0000-000000000000');
        
        // Inserir novos servi√ßos
        console.log('‚ûï Inserindo servi√ßos...');
        const { data, error } = await supabase
            .from('services')
            .insert(realData.services);
        
        if (error) {
            console.log(`‚ùå Erro ao inserir servi√ßos: ${error.message}\n`);
            return false;
        }
        
        console.log(`‚úÖ ${realData.services.length} servi√ßos inseridos com sucesso!\n`);
        return true;
    } catch (error) {
        console.log(`‚ùå Erro ao popular servi√ßos: ${error.message}\n`);
        return false;
    }
}

async function populateReviews() {
    console.log('‚≠ê POPULANDO AVALIA√á√ïES...\n');
    
    try {
        // Limpar tabela existente
        console.log('üßπ Limpando tabela de avalia√ß√µes...');
        await supabase.from('reviews').delete().neq('id', '00000000-0000-0000-0000-000000000000');
        
        // Inserir novas avalia√ß√µes
        console.log('‚ûï Inserindo avalia√ß√µes...');
        const { data, error } = await supabase
            .from('reviews')
            .insert(realData.reviews);
        
        if (error) {
            console.log(`‚ùå Erro ao inserir avalia√ß√µes: ${error.message}\n`);
            return false;
        }
        
        console.log(`‚úÖ ${realData.reviews.length} avalia√ß√µes inseridas com sucesso!\n`);
        return true;
    } catch (error) {
        console.log(`‚ùå Erro ao popular avalia√ß√µes: ${error.message}\n`);
        return false;
    }
}

async function populateSpacePhotos() {
    console.log('üì∏ POPULANDO FOTOS DO ESPA√áO...\n');
    
    try {
        // Limpar tabela existente
        console.log('üßπ Limpando tabela de fotos...');
        await supabase.from('space_photos').delete().neq('id', '00000000-0000-0000-0000-000000000000');
        
        // Inserir novas fotos
        console.log('‚ûï Inserindo fotos...');
        const { data, error } = await supabase
            .from('space_photos')
            .insert(realData.space_photos);
        
        if (error) {
            console.log(`‚ùå Erro ao inserir fotos: ${error.message}\n`);
            return false;
        }
        
        console.log(`‚úÖ ${realData.space_photos.length} fotos inseridas com sucesso!\n`);
        return true;
    } catch (error) {
        console.log(`‚ùå Erro ao popular fotos: ${error.message}\n`);
        return false;
    }
}

async function populateContactInfo() {
    console.log('üìû POPULANDO INFORMA√á√ïES DE CONTATO...\n');
    
    try {
        // Limpar tabela existente
        console.log('üßπ Limpando tabela de contatos...');
        await supabase.from('contact_info').delete().neq('id', '00000000-0000-0000-0000-000000000000');
        
        // Inserir informa√ß√µes de contato
        console.log('‚ûï Inserindo informa√ß√µes de contato...');
        const { data, error } = await supabase
            .from('contact_info')
            .insert([realData.contact_info]);
        
        if (error) {
            console.log(`‚ùå Erro ao inserir informa√ß√µes de contato: ${error.message}\n`);
            return false;
        }
        
        console.log(`‚úÖ Informa√ß√µes de contato inseridas com sucesso!\n`);
        return true;
    } catch (error) {
        console.log(`‚ùå Erro ao popular informa√ß√µes de contato: ${error.message}\n`);
        return false;
    }
}

async function populateFeaturedVideos() {
    console.log('üé¨ POPULANDO V√çDEOS EM DESTAQUE...\n');
    
    try {
        // Limpar tabela existente
        console.log('üßπ Limpando tabela de v√≠deos...');
        await supabase.from('featured_videos').delete().neq('id', '00000000-0000-0000-0000-000000000000');
        
        // Inserir novos v√≠deos
        console.log('‚ûï Inserindo v√≠deos...');
        const { data, error } = await supabase
            .from('featured_videos')
            .insert(realData.featured_videos);
        
        if (error) {
            console.log(`‚ùå Erro ao inserir v√≠deos: ${error.message}\n`);
            return false;
        }
        
        console.log(`‚úÖ ${realData.featured_videos.length} v√≠deos inseridos com sucesso!\n`);
        return true;
    } catch (error) {
        console.log(`‚ùå Erro ao popular v√≠deos: ${error.message}\n`);
        return false;
    }
}

async function verifyPopulation() {
    console.log('üîç VERIFICANDO POPULA√á√ÉO DAS TABELAS...\n');
    
    const tables = [
        { name: 'services', expected: realData.services.length },
        { name: 'reviews', expected: realData.reviews.length },
        { name: 'space_photos', expected: realData.space_photos.length },
        { name: 'contact_info', expected: 1 },
        { name: 'featured_videos', expected: realData.featured_videos.length }
    ];
    
    let allCorrect = true;
    
    for (const table of tables) {
        try {
            const { count, error } = await supabase
                .from(table.name)
                .select('*', { count: 'exact', head: true });
            
            if (error) {
                console.log(`‚ùå Erro ao verificar ${table.name}: ${error.message}`);
                allCorrect = false;
            } else {
                console.log(`üìä ${table.name.toUpperCase()}: ${count} registros (${table.expected} esperados)`);
                if (count !== table.expected) {
                    console.log(`   ‚ö†Ô∏è  Diferen√ßa encontrada!`);
                    allCorrect = false;
                } else {
                    console.log(`   ‚úÖ Quantidade correta`);
                }
            }
            console.log('');
        } catch (error) {
            console.log(`‚ùå Erro ao verificar ${table.name}: ${error.message}\n`);
            allCorrect = false;
        }
    }
    
    return allCorrect;
}

async function main() {
    console.log('üöÄ INICIANDO POPULA√á√ÉO COMPLETA DO BANCO DE DADOS...\n');
    
    try {
        // Popular todas as tabelas
        const servicesOk = await populateServices();
        const reviewsOk = await populateReviews();
        const photosOk = await populateSpacePhotos();
        const contactOk = await populateContactInfo();
        const videosOk = await populateFeaturedVideos();
        
        // Verificar se todas as opera√ß√µes foram bem-sucedidas
        if (servicesOk && reviewsOk && photosOk && contactOk && videosOk) {
            console.log('‚úÖ TODAS AS TABELAS POPULADAS COM SUCESSO!\n');
            
            // Verificar popula√ß√£o
            const verificationOk = await verifyPopulation();
            
            if (verificationOk) {
                console.log('üéâ BANCO DE DADOS TOTALMENTE CONFIGURADO E PRONTO PARA USO!\n');
                console.log('üìä RESUMO FINAL:');
                console.log(`   üçΩÔ∏è  Servi√ßos: ${realData.services.length} itens`);
                console.log(`   ‚≠ê Avalia√ß√µes: ${realData.reviews.length} registros`);
                console.log(`   üì∏ Fotos: ${realData.space_photos.length} imagens`);
                console.log(`   üìû Contatos: 1 registro`);
                console.log(`   üé¨ V√≠deos: ${realData.featured_videos.length} itens`);
                console.log('\n‚úÖ O site agora deve carregar todos os dados corretamente!');
            } else {
                console.log('‚ö†Ô∏è  Houve algumas inconsist√™ncias na verifica√ß√£o final.');
            }
        } else {
            console.log('‚ùå Algumas tabelas n√£o foram populadas corretamente.');
        }
    } catch (error) {
        console.log(`‚ùå Erro durante a popula√ß√£o: ${error.message}`);
    }
}

// Executar popula√ß√£o
main();